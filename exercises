exercise 0.4:
browser ->server: HTTP POST https://studies.cs.helsinki.fi/exampleapp/new_note
server -> browser: redirect
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/notes
server-->browser: HTML-code
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.css
server-->browser: main.css
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.js
server-->browser: main.js

action in browser:
executing js-code. Requesting JSON data from server.END

browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/data.json
server-->browser: [{ content: "send", date: "2022-08-15" }, ...]

eventhandler executed. END


exercise 0.5:

browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/spa
server-->browser: HTML-code
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.css
server-->browser: main.css
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/spa.js
server-->browser: spa.js

action in browser:
executing js-code. Requesting JSON data from server.END

browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/data.json
server-->browser: [{ content: "send", date: "2022-08-15" }, ...]

eventhandler executed. END

exercise 0.6:

browser->server: HTTP POST https://studies.cs.helsinki.fi/exampleapp/new_note_spa

action:
event handler immediately calls the method e.preventDefault() to prevent the default handling of form submit.
Then the event handler creates a new note, adds it to the notes list with the command notes.push(note), rerenders the note list on the page and sends the new note to the server.

END
